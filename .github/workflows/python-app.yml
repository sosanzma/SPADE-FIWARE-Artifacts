name: Python application

on:
  push:
    branches: [ "main" ]
    tags:
      - "*"
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  tox:
    strategy:
      matrix:
        python-version: ["3.8", "3.9"]
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions virtualenv
      - name: Tox
        run: tox

  test:
    strategy:
      matrix:
        python-version: ["3.8", "3.9"]
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        python -m pip install -r requirements_dev.txt
        python -m pip install -r requirements.txt
    - name: Debug info
      run: |
        python -c "import sys; print(sys.path)"
        pip list
        python -V
    - name: Test with pytest
      run: |
        pytest

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .
          python -m pip install -r requirements_dev.txt
          python -m pip install -r requirements.txt
          pip install coverage
      - name: Run coverage
        run: |
          coverage erase
          PYTHONPATH=$PYTHONPATH:$(pwd) coverage run --source=spade_fiware_artifacts -m pytest
          coverage xml
      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          file: coverage.xml
          format: cobertura
      - name: Send coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests

  coveralls_finish:
    needs: coverage
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      run: echo "Coverage reporting finished."